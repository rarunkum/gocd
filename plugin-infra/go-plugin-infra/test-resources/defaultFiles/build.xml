<!-- *************************GO-LICENSE-START******************************
 * Copyright 2014 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<project name="plugin" default="all" basedir="">


    <path id="test.plugin.classpath">
        <pathelement path="../../../plugins/descriptor-aware-test-plugin/lib/dependency.jar"/>
    </path>

    <path id="activator.classpath">
        <pathelement path="../../../../localivy/felix/org.apache.felix.framework-4.0.3.jar"/>
    </path>

    <target name="all" depends="clean, build.descriptor.plugin.jar,
    build.descriptor.plugin.without.plugin.xml.jar, build.error.generating.plugin.jar,
     build.invalid.descriptor.plugin.jar,build.exception.throwing.at.load.plugin.jar,
     build.plugin.with.multiple.extensions.for.same.interface.jar,create.activator.jar, create.osgi.bundles"/>

    <target name="clean">
      <delete file="target"/>
      <delete file="go-plugin-activator.jar"/>
      <delete file="descriptor-aware-test-plugin.jar"/>
      <delete file="descriptor-aware-test-plugin-with-no-plugin-xml.jar"/>
      <delete file="descriptor-aware-test-plugin.osgi.jar"/>
      <delete file="error-generating-descriptor-aware-test-plugin.jar"/>
      <delete file="error-generating-descriptor-aware-test-plugin.osgi.jar"/>
      <delete file="exception-throwing-at-load-plugin.jar"/>
    </target>

    <target name="build.descriptor.plugin.jar">
        <build.jar file="descriptor-aware-test-plugin.jar" dir="../../../plugins/descriptor-aware-test-plugin/" classpathref="test.plugin.classpath" />
    </target>

    <target name="build.descriptor.plugin.without.plugin.xml.jar">
        <build.jar file="descriptor-aware-test-plugin-with-no-plugin-xml.jar" dir="../../../plugins/descriptor-aware-test-plugin/" classpathref="test.plugin.classpath" moreexcludes="plugin.xml" />
    </target>

    <target name="create.activator.jar">
        <build.jar file="go-plugin-activator.jar" dir="../../../go-plugin-activator/src" classpathref="activator.classpath" />
    </target>

    <target name="create.osgi.bundles" depends="build.descriptor.plugin.jar, create.activator.jar">
        <create.osgi.bundle.using file="descriptor-aware-test-plugin"/>
        <create.osgi.bundle.using file="error-generating-descriptor-aware-test-plugin"/>
        <create.osgi.bundle.using file="exception-throwing-at-load-plugin" pluginId="com.tw.go.exception.throwing.at.loadplugin"/>
    </target>

    <target name="build.error.generating.plugin.jar">
        <mkdir dir="target"/>

        <javac srcdir="../../../go-plugin-api-internal/" destdir="target/" includeantruntime="false"/>
        <javac srcdir="../../../go-plugin-api/src" destdir="target/" includeantruntime="false"/>

        <javac srcdir="../../../plugins/error-generating-descriptor-aware-test-plugin/" classpath="target" destdir="target/" includeantruntime="false"/>
        <jar destfile="error-generating-descriptor-aware-test-plugin.jar" basedir="target" excludes="**/*.java
        com/thoughtworks/go/plugin/api/** com/thoughtworks/go/plugin/internal/api/** **/*.iml"/>
        <delete dir="target/"/>
    </target>

    <target name="build.invalid.descriptor.plugin.jar">
        <build.jar file="invalid-descriptor-plugin.jar" dir="../../../plugins/invalid-descriptor-plugin/" classpathref="test.plugin.classpath" />
    </target>
    <target name="build.plugin.with.multiple.extensions.for.same.interface.jar">
        <build.jar file="plugin-with-multiple-extensions.jar" dir="../../../plugins/plugin-with-multiple-extensions-for-same-interface/" classpathref="test.plugin.classpath" />
    </target>
    <target name="build.exception.throwing.at.load.plugin.jar">
        <build.jar file="exception-throwing-at-load-plugin.jar" dir="../../../plugins/exception-throwing-at-load-plugin/" classpathref="test.plugin.classpath" />
    </target>

    <macrodef name="build.jar">
        <attribute name="file"/>
        <attribute name="dir"/>
        <attribute name="classpathref"/>
        <attribute name="moreexcludes" default="" />

        <sequential>
            <delete file="@{file}" failonerror="false"/>

            <copy todir="target">
                <fileset dir="@{dir}"/>
            </copy>

            <javac srcdir="../../../go-plugin-api-internal/" destdir="target/" includeantruntime="false"/>
            <javac srcdir="../../../go-plugin-api/src" destdir="target/" includeantruntime="false"/>
            <javac srcdir="target/" classpathref="@{classpathref}" destdir="target/" includeantruntime="false"/>
            <jar destfile="@{file}" basedir="target" excludes="**/*.java com/thoughtworks/go/plugin/api/** com/thoughtworks/go/plugin/internal/api/** **/*.iml @{moreexcludes}"/>

            <delete dir="target/" failonerror="false"/>
        </sequential>
    </macrodef>

    <property name="defaultPluginId" value="testplugin.descriptorValidator"/>

    <macrodef name="create.osgi.bundle.using">
        <attribute name="file"/>
        <attribute name="pluginId" default="${defaultPluginId}"/>

        <sequential>
            <delete file="@{file}.osgi.jar"/>
            <unzip src="@{file}.jar" dest="target"/>
            <copy file="MANIFEST.WITH.BUNDLE.INFO.MF" tofile="target/META-INF/MANIFEST.MF" overwrite="true"/>
            <replace file="target/META-INF/MANIFEST.MF" token="${defaultPluginId}" value="@{pluginId}"/>
            <copy file="go-plugin-activator.jar" tofile="target/lib/go-plugin-activator.jar"/>
            <zip destfile="@{file}.osgi.jar" basedir="target"/>
            <delete dir="target"/>
        </sequential>
    </macrodef>
</project>
