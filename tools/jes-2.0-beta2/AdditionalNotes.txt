***** Setting up JES for the first time *****
For necessary changes to wrapper.conf read section "Java Service Wrapper".

The mail.conf configuration file needs very few changes for initial usage. These are
adding at least one local domain to "domains" and optionally a default user to
"defaultuser" that MUST be a member of the domain defined in domains. If you 're satisfied
with the default options there are no more changes needed to mail.conf. See entries in the
configuration file for information concerning their usage.

Having added a local domain to mail.conf to be administered by JES, users (along with their
password) belonging to the aforementioned domain are entered into file user.conf. At least
one user should be registered with JES. See user.conf for details concerning the format of
entries in that file.

No special changes are needed for the optional log4j.properties except enabling the
SocketAppender and setting the RemoteHost and Port to be used by CHAINSAW (or any application
setup to listen for events on the specified network address/port). You can also define the
default logging level (info, debug etc.) for any of the loggers.


***** Java Service Wrapper *****
Version 2 introduces the use of Java Service Wrapper as a means of starting up JES.
In order for JES to function properly certain modifications must be applied to
wrapper.conf. These include defining values for these entries:
wrapper.java.additional.2=-Ddns.server=
wrapper.java.additional.3=-Ddns.search=
wrapper.app.parameter.2=
For the first two options read section entitled "dnsjava".
The final option corresponds to the first argument of the JES main class which the
mail server considers to be the JES install dir. It is strongly recommended that
an absolute path is provided (e.g. c:\jes on windows or /usr/local/jes on linux).
Additionally, for each jar that implements a specific external module, an entry
MUST be present in wrapper.conf that matches the complete jar path. Such an entry
can, for instance, be:
wrapper.java.classpath.3=../external/JES-Module1.jar


***** Running JES using mail.bat in Windows / mail.sh in Unix likes *****
In order to properly execute JES from the command prompt using mail.bat/mail.sh you
must modify the said batch file.
JAVA_EXEC need not be altered if the default installed JAVA runtime is acceptable to
be used with JES.
JES_HOME must be set to the directory JES was installed into.
There are are two options in the final mail.bat line, that correspond to the dnsjava
options. Please read section "dnsjava options". If you plan to use external modules
with JES, the full file path must be appended to the classpath (-cp) entry.

To execute the script, no arguments are required at the command line.


***** dnsjava options *****
dnsjava reads two system properties, dns.server and dns.search when it initializes.
If these options are left blank in mail.bat and wrapper.conf, dnsjava searches for
the system defaults and uses those. There maybe issues with this dnsjava automated
feature when the underlying windows OS is non-English and/or there are more than
one network cards installed. If JES starts without issues but you 're unable to
send/receive mail then you will likely have to manually enter these settings.

For the first option, set a value that matches the server ip/domain corresponding
to a local dns server. Alternatively this can be a router's gateway (if the router
gateway acts as a proxy for an isp's dns server) or an isp's dns server.
For the next option the local dns suffix or the top-level domain the host is a
member of suffices. Be aware that if both these options are set to a non-zero length
value, dnsjava will not try to find an additional server or a dns search suffix.

If you 're still experiencing issues or would just like to test the settings before
running JES, try the lookup batch/script located in the bin directory of the JES
install directory.
A suggested lookup is:

(windows) C:\JES\bin> lookup.bat <dns-server> <dns-search> A ericdaugherty.com
(unix)    username@localhost:/usr/local/jes/bin$ ./lookup.sh <dns-server> <dns-search> A ericdaugherty.com

To let dnsjava look for the entries on its own instead of replacing <dns-server> and
<dns-search> with values like 192.168.1.1 and lan substitute both of them with "". That's
two double-quote characters with no space in-between.

A correct output (regardless of OS -although the displayed entry is from a linux distro) would read:

Performs a DNS Lookup using against a DNS server for a domain.
Must be called from the directory where the script resides.
Usage: ./lookup.sh <dns server address> <dns search suffix> <lookup record type>
          <domain to lookup>
Example: The dns server is located at address 192.168.1.1, the search suffix is
         example.com, the record type is MX (typical for a mail server) and the
         domain is ericdaugherty.com:
          ./lookup.sh 192.168.1.1 example.com MX ericdaugherty.com
Example: Letting dnsjava detect the settings and the lookup concerns a MX record
         of type MX for the ericdaugherty.com domain:
          ./lookup.sh \"\" \"\" MX ericdaugherty.com
Results:
adding server 192.168.1.1
adding search lan
lookup ericdaugherty.com. A
unknown
Sending to 192.168.1.1:53
queried ericdaugherty.com. A
successful
ericdaugherty.com:
ericdaugherty.com.	3472	IN	A	68.178.XXX.XXX

If you decide to activate the security manager, you should read the section titled
"Security policy entries that need manual editing". Be aware that with the security
manager active, JES will need security permissions to connect to a nameserver, be it
on a local or remote host. If you 're running JES with the default dnsjava options,
the simplest way to find out the IP to enter in the security policy file is to run the
lookup batch/script file with the double-quote entries as mentioned before. The first
result lines will always read the server and search entries.


***** Java Cryptographic Key Strength Policy *****
Java doesn't support the entire range of cryptographic key strengths out of the box
due to US policy export restrictions imposed on the distributed java bundles. A
separate download which can be retrieved from
http://java.sun.com/javase/downloads/index.jsp
called Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files
exists, that allows Java to unleash full key strength support. Follow the instructions
contained in the downloaded archive to install it. For the RTFM challenged, one simply
needs to copy
local_policy.jar
US_export_policy.jar
from the downloaded archive to the <used-jre-install-path>\lib\security directory
replacing the files of the same name.

***** Build Instructions for version 2.x *****
Building JES from source requires Maven (version 2.0.9 is used and recommended).
Certain libraries used by JES have been altered from their original version.
This applies to the dnsjava-2.0.6 and and commons-codec-1.4-SNAPSHOT runtime libraries
and the columba-1.4 and ristretto-1.2-all test libraries.

JES MUST be built (that is run maven install) with the -Dmaven.test.skip.exec=true passed
as an argument. This is required since the test process expects to find a JES jar in the
target directory. The tests can be run independently (by invoking mvn surefile:test at a 
command prompt/terminal) after the build process is completed. This approach is also in part
preferred since the 2.x test suite takes abouts 15 minutes to complete on a AMD Athlon64
2.2Ghz Dual Core PC.

To make the building process work right the needed jars have to be installed to the local
repository; dnsjava-2.0.6 and commons-codec-1.4-SNAPSHOT have to be replaced with the versions
included in either the bin or src release; columba-1.4 and ristretto-1.2-all must also be
substituted by the versions found in the src release. The jar unix-UID-1.0.jar must also be
manually installed. It is included in the release jars.

Three test library filenames are partially hard coded in JESBaseCase1.java and JESBaseCase2.java:
1. columba-1.4.jar is expected to be found in directory: <maven-repo>/org/columba/1.4
2. ristretto-1.2-all.jar is expected to be found in directory: <maven-repo>/org/ristretto/1.2-all
3. lucene-1.4.3.jar is expected to be found in directory: <maven-repo>/lucene/lucene/1.4.3

where <maven-repo> is acquired from the system property "localRepository".

Additionally, the je library (oracle's berkeleyDB) version 2.1.30 is the je version that ships with
columba. Please refrain from installing another version. It should be retrieved by maven from its
central repo under groupId berkeleyDB, artifactId je. If maven is unable to retrieve it, the 2.1.30
version is included in columba. Install that manually.

Note that certain columba related libraries and javatar can not be found in the central maven
repository. These have to be downloaded from the relative sites:
http://columba.sourceforge.net/ or http://www.columbamail.org/drupal/
http://www.trustice.com/java/tar/

***** Security policy entries that need manual editing *****
Certain entries in the jes.policy file need to be edited. These are:

permission java.net.SocketPermission	"X.X.X.X:10024","connect,resolve"
   Replace X.X.X.X:10024 with the host name or IP and port of the server amavis is running on.
   This value has to coincide with the relative amavis entry in mail.conf.

permission java.net.SocketPermission   "X.X.X.X:53",   "connect,resolve"
   Multiple entries exist for this case. Replace X.X.X.X:53 with the appropriate host name/IP and
   port that JES should use to submit dns queries.

permission java.net.SocketPermission   "localhost:4560",   "connect,resolve"
   Multiple entries exist for this case. Replace localhost:4560 with the settings applied in the
   socket appender entry in log4j.properties. These entries can be commented out if a
   SocketAppender is not used.

a number of Kerberos 5 entries. Instructions for these are in the Kerberos 5 Principals section.

a java.io.FilePermission read permission is required should JES need access to a truststore.

If the included log4j is not to be used an grant codeBase entry in jes.policy for the logging jar
that is to be used is needed. See the reletive entry in the policy file for details.


***** Logging Facility *****
JES now fully allows commons-logging to determine the logging system to be used. While log4j is
included in the supporting libraries, it is only specified externally via wrapper.conf or mail.bat.
Two settings are used to achieve this:
   org.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger
   log4j.configuration=file:../conf/log4j.properties

The second should point to a valid URL (as specified in java).

Since the logging system's libraries have to be located in the classpath an entry has to be present
in mail.bat:
   -cp <other entries>;%JES_HOME%\lib\log4j-1.2.15.jar

and/or wrappers.conf:
   wrapper.java.classpath.4=../lib/log4j-1.2.15.jar

By default, JES uses log4j out of the box with no user intervention, by means of the aforementioned
settings. If a diferrent version and/or file location of log4j is to be used, the log4j.configuration
setting and the two classpath entries have to be altered accordingly. If a different logging system
is to be used altogether the org.apache.commons.logging.Log has to redefined as well.

Of special note is the fact that for its own testing purposes, JES explicitly uses log4j, so a
dependency is present in the pom but is restricted to the test scope.


***** kerberos 5 Principals *****
In order to use one or more kerberos 5 principals one needs not only define the relative settings
in mail.conf but also edit a few entries in the security policy file. Default entries are already
included in the policy file that have to be altered.
Specifically:
Have the entry permission <<java.net.SocketPermission	"*.example.com:88">> point to a specific
host that the kdc is running on, setting a port other than 88 if necessary.
For each principal two entries are required:
<<permission javax.security.auth.AuthPermission "createLoginContext.com.ericdaughery.mail.server.auth.GSSServerMode<protocol>">>
<<permission javax.security.auth.kerberos.ServicePermission "<protocol>/host.example.com@EXAMPLE.COM", "accept">>
Substitute <protocol> with the name of the protocol for the principal in question.
Replace host.example.com with the host name of the server the service is running on.
Rename EXAMPLE.COM to the realm name of choice using upper case.
Note:  All kerberos policy file entries are commented out by default.


***** Migration Tool *****
To facilitate an expedited transition to version 2 a SMTP message and password conversion
utility is included in package com.ericdaugherty.mail.server.utils.
To use it simply type at a command prompt:
java -cp <path to>/jes.jar com.ericdaugherty.mail.server.utils.Migrate arg1 arg2
where:
arg1 the directory where JES 1.6.1 resides.
arg2 a temporary directory where the converted smtp messages and the user.conf file are to be
     persisted. The migration utility will create this directory if it does not yet exist.
