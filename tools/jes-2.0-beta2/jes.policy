grant {
   permission java.lang.RuntimePermission	"accessClassInPackage.sun.*";
   permission java.lang.RuntimePermission	"accessClassInPackage.sun.security.*";
};

grant codeBase "file:${jes.install.directory}/jes.jar" {
	
   permission java.lang.RuntimePermission	"shutdownHooks";
   permission java.lang.RuntimePermission "loadLibrary.UnixUID";

   permission java.util.PropertyPermission "file.encoding",                       "read";
	permission java.util.PropertyPermission "jes.*",                               "read";
   permission java.util.PropertyPermission "dnsjava.options",                     "read";
   permission java.util.PropertyPermission "dns.server",                          "read";
   permission java.util.PropertyPermission "dns.search",                          "read";

   permission java.io.FilePermission	"${jes.install.directory}",   		                 "read";
   permission java.io.FilePermission	"${jes.install.directory}${/}*",		                 "read";
   permission java.io.FilePermission	"${jes.install.directory}${/}backup${/}*",           "read,write,delete";
   permission java.io.FilePermission	"${jes.install.directory}${/}conf${/}*",             "read,write";
   permission java.io.FilePermission   "${jes.install.directory}${/}external",              "read";
   permission java.io.FilePermission	"${jes.install.directory}${/}external${/}*",         "read";
   permission java.io.FilePermission	"${jes.install.directory}${/}logs${/}*",             "read,write,delete";
   permission java.io.FilePermission	"${jes.install.directory}${/}security",              "read";
   permission java.io.FilePermission	"${jes.install.directory}${/}security${/}keystore.jceks","read";
   permission java.io.FilePermission	"${jes.install.directory}${/}security${/}realms.dat","read,write";
   permission java.io.FilePermission	"${jes.users.directory}",                            "read,write,delete";
   permission java.io.FilePermission	"${jes.users.directory}${/}-",                       "read,write,delete";
   permission java.io.FilePermission	"${jes.incoming.directory}",                         "read,write,delete";
   permission java.io.FilePermission	"${jes.incoming.directory}${/}-",                    "read,write,delete";
   permission java.io.FilePermission	"${jes.amavis.directory}",                           "read,write,delete";
   permission java.io.FilePermission	"${jes.amavis.directory}${/}-",                      "read,write,delete";
   permission java.io.FilePermission	"${jes.testing.directory}",                          "read,write,delete";
   permission java.io.FilePermission	"${jes.testing.directory}${/}-",                     "read,write,delete";

   //Uncomment this only if needed//permission java.net.SocketPermission	"X.X.X.X:10024","connect,resolve";//amavis instance
   permission java.net.SocketPermission	"*",   		    "accept,resolve";//incoming pop/smtp connections
   permission java.net.SocketPermission	"*:25",   	    "connect,resolve";//outgoing public smtp connections
   //Uncomment this only if needed//permission java.net.SocketPermission	"*:465",   	    "connect,resolve";//outgoing secure smtp connections
   permission java.net.SocketPermission   "X.X.X.X:53",   "connect,resolve";//nameserver used by dnsjava
   permission java.net.SocketPermission   "localhost:4560",   "connect,resolve";
   permission java.net.SocketPermission   "127.0.0.1:4560",   "connect,resolve";

   permission javax.security.auth.AuthPermission "doAsPrivileged";

   permission java.lang.RuntimePermission "readFileDescriptor";

   permission java.lang.RuntimePermission "writeFileDescriptor";

   //permission java.util.PropertyPermission "java.security.krb5.realm", "read,write";

   //permission java.util.PropertyPermission "java.security.krb5.kdc", "read,write";

   //permission java.util.PropertyPermission "java.security.auth.login.config", "read,write";

   //permission javax.security.auth.AuthPermission "createLoginContext.com.ericdaughery.mail.server.auth.GSSServerModesmtp";
   //permission javax.security.auth.AuthPermission "createLoginContext.com.ericdaughery.mail.server.auth.GSSServerModepop";//Use this when having distinct services for smtp/pop

   //permission java.net.SocketPermission	"*.example.com:88",   	    "connect,resolve";//outgoing kerberos connections, restrict to the kerberos realm

   //permission javax.security.auth.kerberos.ServicePermission "smtp/host.example.com@EXAMPLE.COM", "accept";
   //permission javax.security.auth.kerberos.ServicePermission "pop/host.example.com@EXAMPLE.COM", "accept";//Use this when having distinct services for smtp/pop

};

grant codeBase "file:${jes.install.directory}/lib/dnsjava-2.0.6.jar" {

   permission java.util.PropertyPermission "dnsjava.options",                     "read";
   permission java.util.PropertyPermission "dns.server",                          "read";
   permission java.util.PropertyPermission "dns.search",                          "read";

   permission java.net.SocketPermission "X.X.X.X:53","connect,resolve";//nameserver used by dnsjava
};

grant codeBase "file:/${jes.install.directory}/lib/dnsjava-2.0.6.jar" {

   permission java.util.PropertyPermission "dnsjava.options",                     "read";
   permission java.util.PropertyPermission "dns.server",                          "read";
   permission java.util.PropertyPermission "dns.search",                          "read";

   permission java.net.SocketPermission "X.X.X.X:53","connect,resolve";//nameserver used by dnsjava
};

grant codeBase "file:${jes.install.directory}/lib/commons-logging-1.1.1.jar" {

   permission java.io.FilePermission	"${jes.install.directory}${/}*",	       "read";
   permission java.io.FilePermission	"${jes.install.directory}${/}logs${/}*","read,write,delete";
};

grant codeBase "file:${jes.install.directory}/lib/log4j-1.2.15.jar" {

   //This entire grant codeBase has to be redefined acccording to the alternative logging system used.
   //The "file..." entry has to point to the jar that is included in the classpath. Permission to the
   //folder and the file there in containing possible configuration entries has to be granted, as well
   //as to the folder and file where and if logging to a file is directed. The socket permission must
   //not be omitted.

   permission java.io.FilePermission	   "${jes.install.directory}${/}*",               "read";
   permission java.io.FilePermission	   "${jes.install.directory}${/}conf${/}log4j.properties","read";
   permission java.io.FilePermission	   "${jes.install.directory}${/}logs${/}*",       "read,write,delete";

   permission java.net.SocketPermission   "localhost:4560","connect,resolve";
   permission java.net.SocketPermission   "127.0.0.1:4560","connect,resolve";
   permission java.net.SocketPermission   "X.X.X.X:53",    "connect,resolve";//nameserver used by dnsjava
};

grant codeBase "file:${jes.install.directory}/lib/unixUID-1.0.jar" {

   permission java.lang.RuntimePermission "loadLibrary.UnixUID";
};

grant codeBase "file:${jes.install.directory}/lib/wrapper.jar" {
   permission java.security.AllPermission;
};
